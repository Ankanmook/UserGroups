@page
@model UserGroup.Web.Pages.Person.IndexModel
@using UserGroup.Common
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<p>
    <a asp-page="./Edit" class="btn btn-outline-primary">Add New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <select asp-for="SearchResourceParameter.Group" asp-items="Model.Groups">
                <option value="">@Constants.All</option>
            </select> |
            <select asp-for="SearchResourceParameter.Option" asp-items="Model.SearchOptions">
            </select> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">DateAdded</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GroupSortParm"]">Group</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model.Persons.Results)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => person.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => person.DateAdded)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => person.GroupName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@person.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@person.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@person.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Persons.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Persons.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Persons.PageNumber - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Persons.PageNumber + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>